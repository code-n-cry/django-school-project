# Generated by Django 3.2.17 on 2023-04-17 16:12

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import users.managers
import users.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('skills', '0001_initial'),
        ('teams', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'password',
                    models.CharField(max_length=128, verbose_name='password'),
                ),
                (
                    'last_login',
                    models.DateTimeField(
                        blank=True, null=True, verbose_name='last login'
                    ),
                ),
                (
                    'is_superuser',
                    models.BooleanField(
                        default=False,
                        help_text='Designates that this user has all permissions without explicitly assigning them.',
                        verbose_name='superuser status',
                    ),
                ),
                (
                    'username',
                    models.CharField(
                        error_messages={
                            'unique': 'A user with that username already exists.'
                        },
                        help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.',
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name='username',
                    ),
                ),
                (
                    'first_name',
                    models.CharField(
                        blank=True, max_length=150, verbose_name='first name'
                    ),
                ),
                (
                    'last_name',
                    models.CharField(
                        blank=True, max_length=150, verbose_name='last name'
                    ),
                ),
                (
                    'email',
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        verbose_name='email address',
                    ),
                ),
                (
                    'is_staff',
                    models.BooleanField(
                        default=False,
                        help_text='Designates whether the user can log into this admin site.',
                        verbose_name='staff status',
                    ),
                ),
                (
                    'is_active',
                    models.BooleanField(
                        default=True,
                        help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.',
                        verbose_name='active',
                    ),
                ),
                (
                    'date_joined',
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name='date joined',
                    ),
                ),
                (
                    'detail',
                    models.TextField(
                        help_text='расскажите о себе детальнее',
                        max_length=550,
                        null=True,
                        verbose_name='детали',
                    ),
                ),
                (
                    'is_visible',
                    models.BooleanField(
                        default=True,
                        help_text='могут ли другие пользователи звать вас в команды?',
                        verbose_name='статус видимости',
                    ),
                ),
                (
                    'avatar',
                    models.ImageField(
                        blank=True,
                        help_text='картинка профиля пользователя',
                        null=True,
                        upload_to=users.models.avatar_image_path,
                        verbose_name='аватарка',
                    ),
                ),
                (
                    'failed_logins',
                    models.IntegerField(
                        default=0,
                        help_text='сколько раз был провален вход в аккаунт',
                        verbose_name='количество неудачных входов с момента удачного',
                    ),
                ),
                (
                    'last_failed_login_date',
                    models.DateTimeField(
                        null=True,
                        verbose_name='дата последней неудачной попытки входа',
                    ),
                ),
                (
                    'groups',
                    models.ManyToManyField(
                        blank=True,
                        help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.',
                        related_name='user_set',
                        related_query_name='user',
                        to='auth.Group',
                        verbose_name='groups',
                    ),
                ),
                (
                    'skills',
                    models.ManyToManyField(
                        blank=True,
                        help_text='Ваши навыки',
                        related_name='user',
                        to='skills.Skill',
                        verbose_name='навыки',
                    ),
                ),
                (
                    'user_permissions',
                    models.ManyToManyField(
                        blank=True,
                        help_text='Specific permissions for this user.',
                        related_name='user_set',
                        related_query_name='user',
                        to='auth.Permission',
                        verbose_name='user permissions',
                    ),
                ),
            ],
            options={
                'verbose_name': 'пользователь',
                'verbose_name_plural': 'пользователи',
                'default_related_name': 'user',
            },
            managers=[
                ('objects', users.managers.ActiveUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'from_user',
                    models.ForeignKey(
                        help_text='кто отправил запрос?',
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='request',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='пользователь',
                    ),
                ),
                (
                    'to_team',
                    models.ForeignKey(
                        help_text='в какому команду подан запрос?',
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='request',
                        to='teams.team',
                        verbose_name='команда',
                    ),
                ),
            ],
            options={
                'verbose_name': 'запрос на вступление',
                'verbose_name_plural': 'запросы на вступление',
                'default_related_name': 'request',
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'is_lead',
                    models.BooleanField(
                        default=False,
                        help_text='является ли участник лидом',
                        verbose_name='лид',
                    ),
                ),
                (
                    'team',
                    models.ForeignKey(
                        help_text='команда, в которой состоит юзер',
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='members',
                        to='teams.team',
                        verbose_name='команда',
                    ),
                ),
                (
                    'user',
                    models.ForeignKey(
                        help_text='юзер',
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='member',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='пользователь',
                    ),
                ),
            ],
            options={
                'verbose_name': 'участник',
                'verbose_name_plural': 'участники',
                'default_related_name': 'member',
            },
        ),
        migrations.CreateModel(
            name='Invite',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'from_team',
                    models.ForeignKey(
                        help_text='в какую команду приглашение?',
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='invite',
                        to='teams.team',
                        verbose_name='команда',
                    ),
                ),
                (
                    'to_user',
                    models.ForeignKey(
                        help_text='какому пользователю приглашение?',
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='invite',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='пользователь',
                    ),
                ),
            ],
            options={
                'verbose_name': 'приглашение',
                'verbose_name_plural': 'приглашения',
                'default_related_name': 'invite',
            },
        ),
        migrations.AddConstraint(
            model_name='member',
            constraint=models.UniqueConstraint(
                fields=('team', 'user'), name='unique_member'
            ),
        ),
    ]
